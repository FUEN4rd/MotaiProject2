@model IEnumerable<MotaiProject.ViewModels.ProductViewModel>

@{
    Layout = "~/Views/Shared/_Layout登入.cshtml";
    ViewBag.Title = "產品頁面";
    int xr = 1;
    int xr2 = 1;
    int xr3 = 1;
    bool listA = false;
    bool listB = false;
    bool listC = false;

    List<string> LC = new List<string>();
    List<string> LM = new List<string>();
    List<string> LP = new List<string> {
"NTD.5,000以下","NTD.5,000~50,000","NTD.50,000~200,000","NTD.200,000~1,000,000"
};
    List<string> LS = new List<string>();


    foreach (var item in Model)
    {
        foreach (var cate in item.AllCategory) { LC.Add(cate.Replace("\r\n", "")); }
        foreach (var cate in item.AllMaterial) { LM.Add(cate.Replace("\r\n", "")); }
        foreach (var cate in item.AllSize) { LS.Add(cate.Replace("\r\n", "")); }
        break;
    }

}
<content>
    <style>
        @@font-face {
            font-family: custom-sans-serif;
            src: local("標楷體"), local("微軟正黑體"), local("Microsoft JhengHei");
            unicode-range: U+4E00-9FFF;
        }

        @@font-face {
            font-family: custom-sans-serif;
            src: local(Helvetica), local(Segoe UI);
            unicode-range: U+00-024F
        }

        .custom-sans-serif {
            font-family: custom-sans-serif
        }

        .Y_productInfo {
            padding: 10px 20px;
            text-align: center;
            line-height: 1.5em;
            color: #FCD492;
            height: 90px;
        }

        .btn-brown_me {
            color: #FCD492;
            background-color: #A7674C;
            width: 100px;
        }

            .btn-brown_me:hover {
                color: #FCD492;
                background-color: #945d45;
            }

            .btn-brown_me:focus,
            .btn-brown_me.focus {
                box-shadow: 0 0 0 0.1rem #F2EDD8;
                background-color: #945d45;
            }

            .btn-brown_me.disabled,
            .btn-brown_me:disabled {
                color: #FCD492;
                background-color: #A7674C;
                border-color: #A7674C;
            }

            .btn-brown_me:not(:disabled):not(.disabled):active,
            .btn-brown_me:not(:disabled):not(.disabled).active,
            .show > .btn-brown_me.dropdown-toggle {
                color: #FCD492;
                background-color: #A7674C;
            }

                .btn-brown_me:not(:disabled):not(.disabled):active:focus,
                .btn-brown_me:not(:disabled):not(.disabled).active:focus,
                .show > .btn-brown_me.dropdown-toggle:focus {
                    box-shadow: 0 0 0 0.1rem #F2EDD8;
                    background-color: #945d45;
                }

        .dropdown-item {
            margin-bottom: 4px;
        }

        .displayisnone {
            display: none;
        }

        .Y_yellow {
            background-color: #FCD492;
            color: #313737;
        }

        .Y_white {
            background-color: #F2EDD8;
            color: #313737;
        }
    </style>
    <div class="container">
        <!-- 篩選器頭 -->
        <div style="height:100px">
            <div class="btn-toolbar d-block" role="toolbar" aria-label="Toolbar with button groups" >
                <div class="btn-group" role="group" style="align-items:center">

                    <button id="btnGroupDrop1" type="button" class="btn btn-brown_me dropdown-toggle" data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">
                        @*style="width:75.69px"*@
                        分類
                    </button>

                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        <div class="form-group">
                            @foreach (var item in Model)
                            {
                                if (listA) { break; }
                                foreach (var item2 in item.AllCategory)
                                {<text>
                                        <a class="dropdown-item" href="#" onclick="cl(`C@(xr)`)">
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input d-none" value="@(item2.Replace("\r\n", ""))" id="C@(xr)"
                                                       onclick="bt1(this.value,this.id+1,this.id)">
                                                <label class="form-check-label" for="dropdownCheck">
                                                    @item2.Replace("\r\n", "")
                                                </label>
                                            </div>
                                        </a>
                                </text>
                                xr++;
                            }
                            listA = true;
                        }
                        </div>
                    </div>
                </div>
                <div class="btn-group" role="group" style="align-items:center">
                    <button id="btnGroupDrop1" type="button" class="btn btn-brown_me dropdown-toggle"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        材質
                    </button>

                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        <div class="form-group">
                            @foreach (var item in Model)
                            {
                                if (listB) { break; }
                                foreach (var item2 in item.AllMaterial)
                                {<text>
                                        <a class="dropdown-item" href="#" onclick="cl(`W@(xr2)`)">
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input d-none" value="@(item2.Replace("\r\n", ""))" id="W@(xr2)"
                                                       onclick="bt1(this.value,this.id+1,this.id)">
                                                <label class="form-check-label" for="dropdownCheck">
                                                    @item2.Replace("\r\n", "")
                                                </label>
                                            </div>
                                        </a>
                                </text>
                                xr2++;
                            }
                            listB = true;
                        }
                        </div>
                    </div>
                </div>
                <div class="btn-group" role="group" style="align-items:center">

                    <button id="btnGroupDrop1" type="button" class="btn btn-brown_me dropdown-toggle"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        單價
                    </button>
                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        <div class="form-group">
                            <a class="dropdown-item" href="#" onclick="cl(`P1`)">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input d-none" value="NTD.5,000以下" id="P1"
                                           onclick="bt1(this.value,this.id+1,this.id)">
                                    <label class="form-check-label" for="dropdownCheck">
                                        NTD.5,000以下
                                    </label>
                                </div>
                            </a>
                            <a class="dropdown-item" href="#" onclick="cl(`P2`)">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input d-none" value="NTD.5,000~50,000" id="P2"
                                           onclick="bt1(this.value,this.id+1,this.id)">
                                    <label class="form-check-label" for="dropdownCheck">
                                        NTD.5,000~50,000
                                    </label>
                                </div>
                            </a>
                            <a class="dropdown-item" href="#" onclick="cl(`P3`)">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input d-none" value="NTD.50,000~200,000" id="P3"
                                           onclick="bt1(this.value,this.id+1,this.id)">
                                    <label class="form-check-label" for="dropdownCheck">
                                        NTD.50,000~200,000
                                    </label>
                                </div>
                            </a>
                            <a class="dropdown-item" href="#" onclick="cl(`P4`)">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input d-none" value="NTD.200,000~1,000,000"
                                           id="P4" onclick="bt1(this.value,this.id+1,this.id)">
                                    <label class="form-check-label" for="dropdownCheck">
                                        NTD.200,000~1,000,000
                                    </label>
                                </div>
                            </a>
                            <a class="dropdown-item" href="#" onclick="cl(`P5`)">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input d-none" value="NTD.1,000,000以上" id="P5"
                                           onclick="bt1(this.value,this.id+1,this.id)">
                                    <label class="form-check-label" for="dropdownCheck">
                                        NTD.1,000,000以上
                                    </label>
                                </div>
                            </a>

                        </div>
                    </div>
                </div>
                <div class="btn-group" role="group" style="align-items:center">

                    <button id="btnGroupDrop1" type="button" class="btn btn-brown_me dropdown-toggle"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        尺寸
                    </button>

                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        <div class="form-group">
                            @foreach (var item in Model)
                            {
                                if (listC) { break; }
                                foreach (var item2 in item.AllSize)
                                {<text>
                                        <a class="dropdown-item" href="#" onclick="cl(`S@(xr3)`)">
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input d-none" value="@(item2.Replace("\r\n", ""))" id="S@(xr3)"
                                                       onclick="bt1(this.value,this.id+1,this.id)">
                                                <label class="form-check-label" for="dropdownCheck">
                                                    @item2.Replace("\r\n", "")
                                                </label>
                                            </div>
                                        </a>
                                </text>
                                xr3++;
                            }
                            listC = true;
                        }
                        </div>
                    </div>
                    @*</div>*@
                    <div id="productcount" style="color:#F2EDD8;font-size:large;" class="d-flex">共54件</div>
                </div>
                <div class="d-flex" style="align-content:center">
                    <div id=Nulldiv class="d-flex" style="border-radius:10px"></div>
                    <button onclick="bclean()" class="btn btn-light Y_yellow d-none" id="shine" style="border-color:#A7674C;border-width:3px;border-radius:10px;">清除所有選項</button>
                </div>
            </div>
        </div>
        <!-- 篩選器尾 -->






        <div class="row ">
            @foreach (var item in Model)
            {
                <div class=" col-12 col-md-6 col-xl-3 thisisnotselected @(item.pPriceGroup.Replace("\r\n", "")) @(item.psSize.Replace("\r\n", "")) @(item.psMaterial.Replace("\r\n", "")) @(item.psCategory.Replace("\r\n", "")) product" id="product@(item.ProductId)">
                    <a href="@Url.Action("產品細節","Customer", new { ProductId = item.ProductId }) " style="text-decoration:none;align-content:center">
                        <img src="@Url.Content(item.epsImage)" class="img-fluid" alt="..." style="height:400px;width:255px" />
                        <div class="Y_productInfo">
                            <h4>
                                <b>@Html.DisplayFor(modelItem => item.pName)</b>
                            </h4>
                            <h5>
                                @*<b>NTD$ @Html.DisplayFor(modelItem => item.pPrice)</b>*@
                                <b>NTD$ @((int)item.pPrice)</b>
                            </h5>
                        </div>

                    </a>
                </div>
            }
        </div>
        <div id="NOitem" class="d-none" style="color:#F2EDD8;font-size:32px;text-align:center">無符合條件之商品</div>
    </div>


    <script type="text/javascript">
        (function setname() {
            var x = document.getElementsByClassName("form-check-input");
            for (var i = 0; i < x.length; i++) {
                x[i].setAttribute("name", TransferString(x[i].value));
            }
            //var x1 = document.getElementsByName("NTD.5,000以下");
            //x1[0].click();名字抓的到
        })()

            var JLC = [];
            var JLM = [];
            var JLP = [];
            var JLS = [];
          @foreach (var d in LC)
          {
              @:JLC.push("@d.Replace("\r\n", "")");
          }
            @foreach (var d in LM)
          {
              @:JLM.push("@d.Replace("\r\n", "")");
          }
            @foreach (var d in LP)
          {
              @:JLP.push("@d.Replace("\r\n", "")");
          }
            @foreach (var d in LS)
          {
              @:JLS.push("@d.Replace("\r\n", "")");
          }
            //console.log(JLC, JLM, JLP, JLS);
            //console.log(JLS.indexOf("大"))

        (function () {

            var RR = document.getElementsByClassName("form-check-label");
            var q = [];
            for (var i = 0; i < RR.length; i++) {
                q.push(RR[i].innerHTML.replace(/^\s*|\s*$/g, ""));
            }
            for (var i = 0; i < q.length; i++) {
                var ii = document.getElementsByClassName(`${q[i]}`);
                RR[i].innerHTML += `(${ii.length})`;
            }

        })()


        //onclick事件傳入value值和id
        function bt1(value, id, id2) {
            //判斷點選的按鈕的id是否存在,不存在則建立,存在則alert
            if (!document.getElementById(id)) {
                document.getElementById("shine").classList.remove("d-none");
                value = TransferString(value);
                //建立input元素
                var inp = document.createElement("input");
                inp.type = "button";
                //傳入點選按鈕的value值到新的按鈕
                inp.value =  value+" X";
                //傳入點選按鈕的id到新的按鈕(傳入是id+1防止重複)
                inp.id = id;
                //嵌入class
                inp.className = `custom-sans-serif btn btn-light ${id2.charAt(0)}Button Y_white`;
                //當方法有引數時，用onclick = 方法名(引數)時就有錯了，需要在方法名前面加function()
                inp.onclick = function () {
                    b1(id, id2, value);
                };
                var Nulld = document.getElementById("Nulldiv");
                Nulld.appendChild(inp);
                document.getElementById(`${id2}`).parentNode.parentNode.classList.add("Y_yellow");//改色

                let R = document.getElementsByClassName(`${value}`);

                //判斷要聯集還是交集
                //如果四類都沒有要加一個初始的類別進去
                if (!((Nulld.classList.contains("C")) || (Nulld.classList.contains("W")) || (Nulld.classList.contains("P")) || (Nulld.classList.contains("S")))) {
                    Nulld.classList.add(`${id2.charAt(0)}`);
                }

                var beselected = document.getElementsByName("inArea");//不能用for因為是動態的讀取
                var X = beselected.length;
                //節點的物件是動態的


                if (document.getElementsByClassName(`${id2.charAt(0)}`)[0] == null) {//交集=>把還沒篩掉的當選取範圍

                    for (var i = 0; i < X ; i++) {//不可以用none
                        beselected[i].classList.add("thisisnotselected");
                        if (beselected[i].classList.contains(value)) {
                            beselected[i].classList.remove("displayisnone");
                            beselected[i].classList.remove("thisisnotselected");
                            beselected[i].setAttribute("name", "inArea");
                        }
                        else {
                            beselected[i].classList.add("displayisnone");
                            beselected[i].classList.add("thisisnotselected");
                            beselected[i].classList.add("tem");
                            //beselected[i].setAttribute("name", "");
                        }
                    }
                    var B = document.getElementsByClassName("tem");
                    while (B.length > 0) {
                        B[0].classList.add("thisisnotselected");
                        B[0].setAttribute("name", "");
                        B[0].classList.remove("tem");
                    }
                    Nulld.classList.add(`${id2.charAt(0)}`);//要判斷是否為成重覆值
                    beSelect();
                }//問題 else要抓別的限制條件
                else {//進來要取連集的
                    var ii = 0;
                    var ita = -1;
                    var buttonarray = [];
                    var buttonarrayC = [];//TODO:要分成四個陣列
                    var buttonarrayM = [];
                    var buttonarrayP = [];
                    var buttonarrayS = [];
                    while (Nulld.childNodes.item(ii) != null) {
                        var rr = Nulld.childNodes.item(ii).value;
                        var q = rr.substr(0, rr.length - 2);
                        var y = TransferString(q);
                        buttonarray.push(y);
                        if (JLC.indexOf(`${q}`) > ita) { buttonarrayC.push(y); }
                        if (JLM.indexOf(`${q}`) > ita) { buttonarrayM.push(y); }
                        if (JLP.indexOf(`${q}`) > ita) { buttonarrayP.push(y); }
                        if (JLS.indexOf(`${q}`) > ita) { buttonarrayS.push(y); }

                        ii++;
                    }//抓按鈕還有哪些


                    for (var i = 0; i < R.length; i++) {
                        //抓除了自己以外的按鈕
                        //

                        if (buttonarray.length > 1) {//除了自己有別的按鈕
                            //同類聯集她類交集=>同類有一個就上標記 各個分類都跑一次
                            var A = false;
                            var B = false;
                            var C = false;
                            var D = false;


                            //沒有直接過 有再跑回圈

                            if (buttonarrayC.length > 0) {
                                for (var j = 0; j < buttonarrayC.length; j++) {//四種TOKEN
                                    if (R[i].classList.contains(`${buttonarrayC[j]}`)) { A = true; }
                                }
                            }
                            else {
                                A = true;//沒有項目就不判斷
                            }

                            if (buttonarrayM.length > 0) {
                                for (var j = 0; j < buttonarrayM.length; j++) {
                                    if (R[i].classList.contains(`${buttonarrayM[j]}`)) { B = true; }
                                }
                            }
                            else {
                                B = true;
                            }

                            if (buttonarrayP.length > 0) {
                                for (var j = 0; j < buttonarrayP.length; j++) {
                                    if (R[i].classList.contains(`${buttonarrayP[j]}`)) { C = true; }
                                }
                            }
                            else {
                                C = true;
                            }

                            if (buttonarrayS.length > 0) {
                                for (var j = 0; j < buttonarrayS.length; j++) {
                                    if (R[i].classList.contains(`${buttonarrayS[j]}`)) { D = true; }
                                }
                            }
                            else {
                                D = true;
                            }

                            R[i].classList.add("thisisnotselected");
                            R[i].setAttribute("name", "");//先移除

                            if (A && B && C && D) {
                                R[i].classList.remove("displayisnone");
                                R[i].classList.remove("thisisnotselected");
                                R[i].setAttribute("name", "inArea");//再加入
                            }

                        }
                        else {
                            R[i].classList.remove("displayisnone");
                            R[i].classList.remove("thisisnotselected");
                            R[i].setAttribute("name", "inArea");//第一筆
                        }


                    }


                    ////再挖除
                    //var B = document.getElementsByClassName("notthis");
                    //while (B.length > 0) {
                    //    B[0].classList.add("thisisnotselected");
                    //    B[0].setAttribute("name", "");
                    //    B[0].classList.remove("notthis");
                    //}




                    Nulld.classList.add(`${id2.charAt(0)}`);//要判斷是否為成重覆值
                    beSelect();
                }


            } else {//取消
                var Nulld = document.getElementById("Nulldiv");
                document.getElementById(id).remove();
                document.getElementById(`${id2}`).parentNode.parentNode.classList.remove("Y_yellow");//改色
                let R = document.getElementsByClassName(`${value}`);
                if (document.getElementsByClassName(`${id2.charAt(0)}Button`).item(0) == null) {//種類按鈕歸零的時候
                    Nulld.classList.remove(`${id2.charAt(0)}`);//拔掉種類判斷項
                }
                if (!((Nulld.classList.contains("C")) || (Nulld.classList.contains("W")) || (Nulld.classList.contains("P")) || (Nulld.classList.contains("S")))) {
                    //都沒有 好像可以改用下面的 清空
                    for (var i = 0; i < R.length; i++) {
                        R[i].classList.remove("displayisnone");
                        R[i].classList.add("thisisnotselected");
                        R[i].setAttribute("name", "");
                    }
                }
                else {//還有 有問題 選取範圍反了
                    //也許可以重傳參數再跑一次=>bclean後跑if
                    var i = 0;
                    var buttonarray = [];
                    while (Nulld.childNodes.item(i) != null) {
                        var rr = Nulld.childNodes.item(i).value;
                        var q = rr.substr(0, rr.length - 2);
                        var y = TransferString(q);
                        buttonarray.push(y);
                        i++;
                    }//抓按鈕還有哪些

                    bclean();//清空一輪
                    for (var j = 0; j < buttonarray.length; j++) {//重來一輪
                        var clickevent = document.getElementsByName(`${buttonarray[j]}`);
                        clickevent[0].click();

                    }

                }
                beSelect();
                document.getElementById("shine").classList.add("d-none");
            }
        }
        function b1(id, id2, value) {//OK

            var Nulld = document.getElementById("Nulldiv");
            document.getElementById(id).remove();
            document.getElementById(`${id2}`).parentNode.parentNode.classList.remove("Y_yellow");//改色
            let R = document.getElementsByClassName(`${value}`);
            if (document.getElementsByClassName(`${id2.charAt(0)}Button`).item(0) == null) {//種類按鈕歸零的時候
                Nulld.classList.remove(`${id2.charAt(0)}`);//拔掉種類判斷項
            }
            if (!((Nulld.classList.contains("C")) || (Nulld.classList.contains("W")) || (Nulld.classList.contains("P")) || (Nulld.classList.contains("S")))) {
                //都沒有 好像可以改用下面的
                for (var i = 0; i < R.length; i++) {
                    R[i].classList.remove("displayisnone");
                    R[i].classList.add("thisisnotselected");
                    R[i].setAttribute("name", "");
                }
            }
            else {//還有 
                var i = 0;
                var buttonarray = [];
                while (Nulld.childNodes.item(i) != null) {
                    var rr = Nulld.childNodes.item(i).value;
                    var y = rr.substr(0, rr.length - 2);
                    buttonarray.push(y);
                    i++;
                }//抓按鈕還有哪些
                bclean();

                for (var j = 0; j < buttonarray.length; j++) {
                    var clickevent = document.getElementsByName(`${buttonarray[j]}`);
                    clickevent[0].click();

                }

            }
            beSelect();
            document.getElementById("shine").classList.add("d-none");
        }


        //全部加1個class 抓分類class 再把選到的東西拔掉一個class  最後加入class屬性是display:none
        function cl(id) {
            document.getElementById(id).click();
        }

        function beSelect() {
            var S = document.getElementsByClassName("thisisnotselected");
            var Nulld = document.getElementById("Nulldiv");
            for (var i = 0; i < S.length; i++) {
                S[i].classList.add("displayisnone");
            }

            if (Nulld.innerHTML == "") {//未選取
                //for (var i = 0; i < S.length; i++) {
                //    S[i].classList.remove("displayisnone");
                //    S[i].setAttribute("name", "");
                //}
                var wtf = document.getElementsByClassName("product");
                for (var item = 0; item < wtf.length; item++) {
                    wtf[item].classList.remove("displayisnone");
                    wtf[item].classList.add("thisisnotselected");
                    wtf[item].setAttribute("name", "");
                }

                Nulld.classList.remove("C");
                Nulld.classList.remove("W");
                Nulld.classList.remove("P");
                Nulld.classList.remove("S");
                document.getElementById("productcount").innerHTML = `共${S.length}件`;
                document.getElementById("NOitem").classList.add("d-none");
            }
            else {
                var Z = document.getElementsByName("inArea");
                document.getElementById("productcount").innerHTML = `共${Z.length}件`;
                document.getElementById("NOitem").classList.add("d-none");
                if (Z.length == 0) {
                    document.getElementById("NOitem").classList.remove("d-none");
                }
            }
        }//改變屬性


        function bclean() {
            var x = document.getElementById("Nulldiv");
            var x2 = x.lastChild;
            while (x2) {
                x2.click();
                x2 = x.lastChild;
            }
        }


        function TransferString(content) {//去掉奇怪符號
            var string = content;
            try {
                string = string.replace(/\r\n/g, "")
                string = string.replace(/\n/g, "");
            } catch (e) {
                console.log(e.message);
            }
            return string;
        }

        var shine = $("#shine")
        if (document.getElementById("Nulldiv").innerHTML == null){
            shine.css("display", "none");
        }
        else {
            shine.css("display", "block");
        }


    </script>
</content>