@model IEnumerable<MotaiProject.ViewModels.DetailPromotionViewModel>

@{
    ViewBag.Title = "管理消息";
    Layout = "~/Views/Shared/Layoutbusiness.cshtml";
}


<style>
    th {
        width: 140px;
    }
</style>
<div style="display:flex;justify-content:space-between">
    <h2>管理消息</h2>
    <div style="position:absolute;right:300px">
        <label style="font-size:16px;padding-top:12px;padding-right:10px;line-height:16px;margin-bottom:-5px;">搜尋: </label>
        <input type="search" class="light-table-filter" data-table="order-table" placeholder="請輸入關鍵字">
    </div>
</div>

<button class="btn btn-primary" style="background-color:white">
    @Html.ActionLink("新增", "新增消息")
</button>
<table class="table order-table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.pPromotionPostDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.sPromotinoCategory)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PromotionName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PromotionDescription)
        </th>


        <th>
            @Html.DisplayNameFor(model => model.pCondition)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pDiscount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pDiscountCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pPromotionStartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pPromotionDeadline)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.pADimage)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.pPromotionPostDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.sPromotinoCategory)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PromotionName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PromotionDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.pCondition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.pDiscount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.pDiscountCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.pPromotionStartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.pPromotionDeadline)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.pADimage)*@
                <img src="@Html.DisplayFor(modelItem => item.pADimage)" width="90" height="90" />
            </td>
            <td style="display:none">
                @Html.DisplayFor(modelItem => item.PromotionId)
            </td>
            <td>
                @Html.ActionLink("編輯", "修改消息", new { id = item.PromotionId })
            </td>
        </tr>
    }

</table>


<script src="~/Content/js/jquery-3.5.1.min.js"></script>
<script>
    (function (document) {
        'use strict';

        // 建立 LightTableFilter
        var LightTableFilter = (function (Arr) {

            var _input;

            // 資料輸入事件處理函數
            function _onInputEvent(e) {
                _input = e.target;
                var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
                Arr.forEach.call(tables, function (table) {
                    Arr.forEach.call(table.tBodies, function (tbody) {
                        Arr.forEach.call(tbody.rows, _filter);
                    });
                });
            }

            // 資料篩選函數，顯示包含關鍵字的列，其餘隱藏
            function _filter(row) {
                var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
                row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';
            }

            return {
                // 初始化函數
                init: function () {
                    var inputs = document.getElementsByClassName('light-table-filter');
                    Arr.forEach.call(inputs, function (input) {
                        input.oninput = _onInputEvent;
                    });
                }
            };
        })(Array.prototype);

        // 網頁載入完成後，啟動 LightTableFilter
        document.addEventListener('readystatechange', function () {
            if (document.readyState === 'complete') {
                LightTableFilter.init();
            }
        });

    })(document);
</script>
