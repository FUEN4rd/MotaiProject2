@model MotaiProject.ViewModels.DetailPromotionViewModel

@{
    ViewBag.Title = "新增消息";
    Layout = "~/Views/Shared/Layoutbusiness.cshtml";
}

<h2>新增消息</h2>


@using (Html.BeginForm("新增消息", "business", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.pCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.pCategory, Model.Categories, "請選擇分類", new { @class = "form-control", id = "pCategory" })
            @Html.ValidationMessageFor(model => model.pCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PromotionName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.PromotionName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.PromotionName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PromotionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.PromotionDescription, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.PromotionDescription, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.pCondition, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pCondition, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pCondition, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pDiscount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pDiscount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pDiscount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pDiscountCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pDiscountCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pDiscountCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pPromotionStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.pPromotionStartDate, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "start" } })
            @Html.ValidationMessageFor(model => model.pPromotionStartDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pPromotionDeadline, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.pPromotionDeadline, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "dead" } })
            @Html.ValidationMessageFor(model => model.pPromotionDeadline, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.pPromotionWeb, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.pPromotionWeb, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pPromotionWeb, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.upLoadimage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="filefield" name="upLoadimage" accept="image/*" , required="required" />
        </div>
        <div id="img-container"></div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="新增" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("回到消息", "員工看消息")
</div>

@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script>
    const filefield = document.querySelector('#filefield');
    const container = document.querySelector('#img-container');

    const onReaderLoaded = function (event) {
        let tpl = `<img class="myimg" src="${event.target.result}" alt="" width="450px">`;
        container.innerHTML = tpl;
    }

    filefield.addEventListener('change', function (event) {
        const reader = new FileReader();
        reader.addEventListener('load', onReaderLoaded);
        reader.readAsDataURL(filefield.files[0]);
    });

    const change = document.getElementById('dead');

    change.addEventListener('blur', function ckdate() {
        var starttime = $('#start').val();
        var endtime = $('#dead').val();
        var start = new Date(starttime.replace("-", "/").replace("-", "/"));
        var end = new Date(endtime.replace("-", "/").replace("-", "/"));
        if (end < start) {
            alert('结束日期不能小于開始日期！');
            return false;
        }
        else {
            return true;
        }
    })

    
    
    //確定ok
    
   

</script>
