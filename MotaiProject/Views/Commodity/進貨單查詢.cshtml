@model IEnumerable<MotaiProject.ViewModels.StockSelectViewModel>

@{
    ViewBag.Title = "查詢進貨單";
    Layout = "~/Views/Shared/LayoutCommodity.cshtml";
    int i = 0;
}
<style>
</style>
<div style="display:flex;justify-content:space-between">
    <h2>查詢進貨單</h2>
    <a href="@Url.Action("進貨單建立","Commodity")" style="text-decoration:none">新增進貨單</a>
    <div style="position:absolute;right:300px">
        <label style="font-size:16px;padding-top:12px;padding-right:10px;line-height:16px;margin-bottom:-5px;">搜尋: </label>
        <input type="search" class="light-table-filter" data-table="order-table" placeholder="請輸入關鍵字">
    </div>
</div>
 @*<table class="table  order-table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sStockSerialValue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sVendor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sVendorTel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sStockDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.sStockNote)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sStockSerialValue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sVendor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sVendorTel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sStockDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.sStockNote)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.StockDetails.First().ProductNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StockDetails.First().ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StockDetails.First().sCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StockDetails.First().sQuantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StockDetails.First().WareHouseName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StockDetails.First().sNote)
                </th>
            </tr>
            foreach (var itemdetail in item.StockDetails)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => itemdetail.ProductNum)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => itemdetail.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => itemdetail.sCost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => itemdetail.sQuantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => itemdetail.WareHouseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => itemdetail.sNote)
                </td>
            </tr>
            }
        }
    </table>*@


<div class="accordion" id="accordionExample">
    @*<div class="container" style="margin-left:-30px;width:68vw">*@
    <div class="card-header" style="padding:0px">
        <table class="table" style="text-align:center">
            <tr>
                <th style="width:150px">
                    @Html.DisplayNameFor(model => model.EmployeeName)
                </th>
                <th style="width:150px">
                    @Html.DisplayNameFor(model => model.sStockSerialValue)
                </th>
                <th style="width:150px">
                    @Html.DisplayNameFor(model => model.sVendor)
                </th>
                <th style="width:150px">
                    @Html.DisplayNameFor(model => model.sVendorTel)
                </th>
                <th style="width:150px">
                    @Html.DisplayNameFor(model => model.sStockDate)
                </th>
                <th style="width:150px">
                    @Html.DisplayNameFor(model => model.sStockNote)
                </th>
            </tr>
        </table>
    </div>

    @foreach (var item in Model)
    {
        <div class="card" style="padding:0px">
            <div class="card-header" id="heading@(i)" style="padding:0px">
                <div class="btn btn-link container-fluid" type="button" data-toggle="collapse" data-target="#collapse@(i)" aria-expanded="true" aria-controls="collapse@(i)" style="padding:0px">
                    <table class="table table-hover">
                        <tr>
                            <td style="width:150px" >
                                @item.EmployeeName.Replace("\r\n", "")
                            </td>
                            <td style="width:150px">
                                @Html.DisplayFor(modelItem => item.sStockSerialValue)
                            </td>
                            <td style="width:150px">
                                @Html.DisplayFor(modelItem => item.sVendor)
                            </td>
                            <td style="width:150px">
                                @Html.DisplayFor(modelItem => item.sVendorTel)
                            </td>
                            <td style="width:150px">
                                @Html.DisplayFor(modelItem => item.sStockDate)
                            </td>
                            <td style="width:150px">
                                @Html.DisplayFor(modelItem => item.sStockNote)
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div id="collapse@(i)" class="collapse hide" aria-labelledby="heading@(i)" data-parent="#accordionExample">
                <div class="card-body" style="width:100%">
                    <table class="table text-dark" style="text-align:center">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.StockDetails.First().ProductNum)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockDetails.First().ProductName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockDetails.First().sCost)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockDetails.First().sQuantity)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockDetails.First().WareHouseName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.StockDetails.First().sNote)
                            </th>
                        </tr>
                        @foreach (var itemdetail in item.StockDetails)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => itemdetail.ProductNum)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemdetail.ProductName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemdetail.sCost)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemdetail.sQuantity)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemdetail.WareHouseName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => itemdetail.sNote)
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
        i++;
    }
</div>
    <script src="~/Content/js/jquery-3.5.1.min.js"></script>
    <script>
        (function (document) {
            'use strict';

            // 建立 LightTableFilter
            var LightTableFilter = (function (Arr) {

                var _input;

                // 資料輸入事件處理函數
                function _onInputEvent(e) {
                    _input = e.target;
                    var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
                    Arr.forEach.call(tables, function (table) {
                        Arr.forEach.call(table.tBodies, function (tbody) {
                            Arr.forEach.call(tbody.rows, _filter);
                        });
                    });
                }

                // 資料篩選函數，顯示包含關鍵字的列，其餘隱藏
                function _filter(row) {
                    var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
                    row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';
                }

                return {
                    // 初始化函數
                    init: function () {
                        var inputs = document.getElementsByClassName('light-table-filter');
                        Arr.forEach.call(inputs, function (input) {
                            input.oninput = _onInputEvent;
                        });
                    }
                };
            })(Array.prototype);

            // 網頁載入完成後，啟動 LightTableFilter
            document.addEventListener('readystatechange', function () {
                if (document.readyState === 'complete') {
                    LightTableFilter.init();
                }
            });

        })(document);
    </script>
