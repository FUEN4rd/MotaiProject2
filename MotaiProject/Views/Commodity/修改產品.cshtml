@model MotaiProject.ViewModels.EmpProductViewModel

@{
    ViewBag.Title = "修改產品";
    Layout = "~/Views/Shared/LayoutCommodity.cshtml";
}

<h2>修改產品</h2>

<style>
    a {
        color: #000000;
    }

        a:hover {
            color: #000000;
            text-decoration: none;
        }

    .btn-yellow_me_one {
        color: #000000;
        font-weight: 900;
        background-color: #FCD492;
        width: 100px;
    }

        .btn-yellow_me_one:hover {
            color: #000000;
            font-weight: 900;
            background-color: #ffdfaa;
        }

        .btn-yellow_me_one:focus,
        .btn-yellow_me_one.focus {
            box-shadow: 0 0 0 0.1rem #F2EDD8;
            background-color: #ffdfaa;
        }

        .btn-yellow_me_one.disabled,
        .btn-yellow_me_one:disabled {
            color: #000000;
            font-weight: 900;
            background-color: #FCD492;
            border-color: #A7674C;
        }

        .btn-yellow_me_one:not(:disabled):not(.disabled):active,
        .btn-yellow_me_one:not(:disabled):not(.disabled).active,
        .show > .btn-yellow_me_one.dropdown-toggle {
            color: #000000;
            font-weight: 900;
            background-color: #FCD492;
        }

            .btn-yellow_me_one:not(:disabled):not(.disabled):active:focus,
            .btn-yellow_me_one:not(:disabled):not(.disabled).active:focus,
            .show > .btn-brown_me_one.dropdown-toggle:focus {
                box-shadow: 0 0 0 0.1rem #F2EDD8;
                background-color: #ffdfaa;
            }
</style>

@using (Html.BeginForm("修改產品", "Commodity", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group hidden" style="display:none">
        @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.pName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pIntroduction, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @*@Html.EditorFor(model => model.pIntroduction, new { htmlAttributes = new { @class = "form-control" } })*@
            <textarea class="control-label" cols="60" id="pIntroduction" name="pIntroduction" rows="10">@Model.pIntroduction</textarea>
            @Html.ValidationMessageFor(model => model.pIntroduction, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.pCategory, Model.Categories, "請選擇分類", new { @class = "form-control", id = "pCategory" })
            @Html.ValidationMessageFor(model => model.pCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pMaterial, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.pMaterial, Model.Materials, "請選擇材質", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.pMaterial, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.psSize, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.DropDownListFor(model => model.pSize, Model.Sizes, "請選擇尺寸", new { @class = "form-control", @id = "pSize" })
            @Html.ValidationMessageFor(model => model.pSize, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pLxWxH, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pLxWxH, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pLxWxH, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pWeight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pWeight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pWeight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.pPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.pPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.pImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" id="filefield" name="pImage" multiple accept="image/*" />
        </div>
        <div id="img-container" name="pImage"></div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="儲存" class="btn btn-yellow_me_one" />
        </div>
    </div>

    <div>
        @Html.ActionLink("回上一頁", "倉儲看產品頁面")
    </div>
</div>
}


<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    const filefield = document.querySelector('#filefield');
    const container = document.querySelector('#img-container');
    $(document).ready(function () {
        fetch('@Url.Action("修改產品讀圖", "Commodity")', {
            method: 'POST',
            headers: {
                "Content-type": "application/x-www-form-urlencoded; charset=UTF-8"
            },
            body: `ProductId=${@Model.ProductId}`
        }).then(function (response) {
            return response.json();
        }).then(function (data) {
            for (let i = 0; i < data.images.length; i++) {
                onReader(data.images[i]);
            }
        });
    });
    const onReader = function (event) {
        let tpl = `<img class="myimg" src="${event}" alt="" width="450px">`;
        container.innerHTML += tpl;
    }
    const onReaderLoaded = function (event) {
        let tpl = `<img class="myimg" src="${event.target.result}" alt="" width="450px">`;
        container.innerHTML += tpl;
    }

    filefield.addEventListener('change', function (event) {
        container.innerHTML = "";
        console.log(filefield.files);
        for (let i = 0; i < filefield.files.length; i++) {
            const reader = new FileReader();
            reader.addEventListener('load', onReaderLoaded);
            reader.readAsDataURL(filefield.files[i]);
        }
    });
</script>