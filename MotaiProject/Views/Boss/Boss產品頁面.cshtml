@model IEnumerable<MotaiProject.ViewModels.ProductViewModel>
@{
    ViewBag.Title = "產品頁面";
    Layout = "~/Views/Shared/_LayoutBoss.cshtml";
}

<div class="bg-white">
    <div style="position:absolute;right:200px">
        <label style="font-size:16px;padding-top:12px;padding-right:10px;line-height:16px;margin-bottom:-5px;">搜尋: </label>
        <input type="search" class="light-table-filter" data-table="order-table" placeholder="請輸入關鍵字">
    </div>
    <h2>產品頁面</h2>

    <table class="table order-table" style="text-align:center">
        <thead>
            <tr>
                <th scope="col" class="text-nowrap" style="display:none">
                    @Html.DisplayNameFor(model => model.ProductId)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.psImage)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pNumber)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pName)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pCategory)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pMaterial)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pSize)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pLxWxH)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pWeight)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pPrice)
                </th>
                <th scope="col" class="text-nowrap">
                    @Html.DisplayNameFor(model => model.pQty)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td scope="row" style="display:none">
                        @Html.DisplayFor(modelItem => item.ProductId)
                    </td>
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.epsImage)" width="90" height="90" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.psCategory)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.psMaterial)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.psSize)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pLxWxH)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pWeight)
                    </td>
                    <td>
                        @((int)item.pPrice)元
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.pQty)
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    (function (document) {
        'use strict';

        // 建立 LightTableFilter
        var LightTableFilter = (function (Arr) {

            var _input;

            // 資料輸入事件處理函數
            function _onInputEvent(e) {
                _input = e.target;
                var tables = document.getElementsByClassName(_input.getAttribute('data-table'));
                Arr.forEach.call(tables, function (table) {
                    Arr.forEach.call(table.tBodies, function (tbody) {
                        Arr.forEach.call(tbody.rows, _filter);
                    });
                });
            }

            // 資料篩選函數，顯示包含關鍵字的列，其餘隱藏
            function _filter(row) {
                var text = row.textContent.toLowerCase(), val = _input.value.toLowerCase();
                row.style.display = text.indexOf(val) === -1 ? 'none' : 'table-row';
            }

            return {
                // 初始化函數
                init: function () {
                    var inputs = document.getElementsByClassName('light-table-filter');
                    Arr.forEach.call(inputs, function (input) {
                        input.oninput = _onInputEvent;
                    });
                }
            };
        })(Array.prototype);

        // 網頁載入完成後，啟動 LightTableFilter
        document.addEventListener('readystatechange', function () {
            if (document.readyState === 'complete') {
                LightTableFilter.init();
            }
        });

    })(document);
</script>